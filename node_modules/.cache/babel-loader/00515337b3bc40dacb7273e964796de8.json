{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\web\\\\NODE_FINAL_PROJECT\\\\Chat_App\\\\frontend\\\\src\\\\components\\\\ScrollableChat.js\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\"; // import ScrollableFeed from \"react-scrollable-feed\";\n\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollableChat = _ref => {\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: m.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: m.sender.name,\n          src: m.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, m, i, user._id),\n          marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\",\n          marginBottom: \"10px\"\n        },\n        children: m.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, m._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"names":["Avatar","Tooltip","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","ScrollableChat","messages","user","map","m","i","display","_id","sender","name","pic","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","marginBottom","content"],"sources":["C:/Users/tanma/Desktop/web/NODE_FINAL_PROJECT/Chat_App/frontend/src/components/ScrollableChat.js"],"sourcesContent":["import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\n// import ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n                marginBottom: \"10px\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB,C,CACA;;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,UAJF,QAKO,sBALP;AAMA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,MAAMC,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACvC,MAAM;IAAEC;EAAF,IAAWH,SAAS,EAA1B;EAEA,oBACE;IAAA,UACGE,QAAQ,IACPA,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACX;MAAK,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX,CAAZ;MAAA,WACG,CAACV,YAAY,CAACK,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAAZ,IACAZ,aAAa,CAACM,QAAD,EAAWI,CAAX,EAAcH,IAAI,CAACK,GAAnB,CADd,kBAEC,QAAC,OAAD;QAAS,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASC,IAAzB;QAA+B,SAAS,EAAC,cAAzC;QAAwD,QAAQ,MAAhE;QAAA,uBACE,QAAC,MAAD;UACE,EAAE,EAAC,KADL;UAEE,EAAE,EAAE,CAFN;UAGE,IAAI,EAAC,IAHP;UAIE,MAAM,EAAC,SAJT;UAKE,IAAI,EAAEL,CAAC,CAACI,MAAF,CAASC,IALjB;UAME,GAAG,EAAEL,CAAC,CAACI,MAAF,CAASE;QANhB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHJ,eAcE;QACE,KAAK,EAAE;UACLC,eAAe,EAAG,GAChBP,CAAC,CAACI,MAAF,CAASD,GAAT,KAAiBL,IAAI,CAACK,GAAtB,GAA4B,SAA5B,GAAwC,SACzC,EAHI;UAILK,UAAU,EAAEf,kBAAkB,CAACI,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAJzB;UAKLM,SAAS,EAAEf,UAAU,CAACG,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAAV,GAAuC,CAAvC,GAA2C,EALjD;UAMLO,YAAY,EAAE,MANT;UAOLC,OAAO,EAAE,UAPJ;UAQLC,QAAQ,EAAE,KARL;UASLC,YAAY,EAAE;QATT,CADT;QAAA,UAaGb,CAAC,CAACc;MAbL;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA,GAAsCd,CAAC,CAACG,GAAxC;MAAA;MAAA;MAAA;IAAA,QADF;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD,CAxCD;;KAAMP,c;AA0CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}