{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\web\\\\NODE_FINAL_PROJECT\\\\Chat_App\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { useEffect, useState } from \"react\"; // import { getSender } from \"../config/ChatLogics\";\n\nimport ChatLoading from \"./ChatLoading\"; // import GroupChatModal from \"./miscellaneous/GroupChatModal\";\n\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyChats = _ref => {\n  _s();\n\n  let {\n    fetchAgain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const data = await fetch(`http://localhost:3500/api/chat`, config);\n      const res = await data.json();\n      console.log(res);\n      setChats(res);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats(); // eslint-disable-next-line\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    h: \"97%\",\n    w: {\n      base: \"100%\",\n      md: \"30%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    bg: \"\",\n    color: \"white\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(Button, {\n        d: \"flex\",\n        marginLeft: \"20%\",\n        p: \"0\",\n        bg: \"\",\n        c: \"white\",\n        fontSize: \"14px\",\n        rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this),\n        children: \"New Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"black\",\n      w: \"100%\",\n      margin: \"2px\",\n      marginLeft: \"0.2px\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n\n_c = MyChats;\nexport default MyChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["AddIcon","Box","Stack","Text","useToast","useEffect","useState","ChatLoading","Button","ChatState","MyChats","fetchAgain","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","fetch","res","json","console","log","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md"],"sources":["C:/Users/tanma/Desktop/web/NODE_FINAL_PROJECT/Chat_App/frontend/src/components/MyChats.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n// import { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\n// import GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const data = await fetch(`http://localhost:3500/api/chat`, config);\r\n      const res = await data.json();\r\n\r\n      console.log(res);\r\n      setChats(res);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      h=\"97%\"\r\n      w={{ base: \"100%\", md: \"30%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n      bg=\"\"\r\n      color=\"white\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        {/* <GroupChatModal> */}\r\n        <Button\r\n          d=\"flex\"\r\n          marginLeft=\"20%\"\r\n          p=\"0\"\r\n          bg=\"\"\r\n          c=\"white\"\r\n          fontSize=\"14px\"\r\n          rightIcon={<AddIcon />}\r\n        >\r\n          New Group Chat\r\n        </Button>\r\n        {/* </GroupChatModal> */}\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"black\"\r\n        w=\"100%\"\r\n        margin=\"2px\"\r\n        marginLeft=\"0.2px\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {/* {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )} */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}